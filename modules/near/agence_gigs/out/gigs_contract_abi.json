{
  "schema_version": "0.4.0",
  "metadata": {
    "name": "agence_gigs",
    "version": "0.1.0",
    "build": {
      "compiler": "rustc 1.82.0",
      "builder": "cargo-near cargo-near-build 0.1.1"
    },
    "wasm_hash": "4zXDxXF6oP5TdzKbL2JG36KPwNw8KLRUyZPj9fVcHW7P"
  },
  "body": {
    "functions": [
      {
        "name": "cancel_gig",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "gig_id",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        }
      },
      {
        "name": "complete_gig",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "gig_id",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "complete_gig_callback",
        "kind": "call",
        "modifiers": [
          "private"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "gig_id",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "callbacks": [
          {
            "serialization_type": "json",
            "type_schema": {
              "type": "null"
            }
          },
          {
            "serialization_type": "json",
            "type_schema": {
              "type": "null"
            }
          }
        ]
      },
      {
        "name": "contract_source_metadata",
        "kind": "view"
      },
      {
        "name": "create_gig",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "kind",
              "type_schema": {
                "$ref": "#/definitions/GigKind"
              }
            },
            {
              "name": "binding_amount",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "create_gig_callback",
        "kind": "call",
        "modifiers": [
          "private"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "kind",
              "type_schema": {
                "$ref": "#/definitions/GigKind"
              }
            },
            {
              "name": "agency",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "binding_amount",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "callbacks": [
          {
            "serialization_type": "json",
            "type_schema": {
              "type": "null"
            }
          }
        ]
      },
      {
        "name": "flag_gig",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "gig_id",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "reason",
              "type_schema": {
                "$ref": "#/definitions/RejectionReason"
              }
            }
          ]
        }
      },
      {
        "name": "get_gig",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "gig_id",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "anyOf": [
              {
                "$ref": "#/definitions/Gig"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      {
        "name": "get_gigs",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "user",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/Gig"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      },
      {
        "name": "init",
        "kind": "call",
        "modifiers": [
          "init"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "governance_account",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "staking_account",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        }
      },
      {
        "name": "start_gig",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "gig_id",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "selected_ace",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "start_gig_callback",
        "kind": "call",
        "modifiers": [
          "private"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "gig_id",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "selected_ace",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "callbacks": [
          {
            "serialization_type": "json",
            "type_schema": {
              "type": "null"
            }
          }
        ]
      }
    ],
    "root_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "String",
      "type": "string",
      "definitions": {
        "AccountId": {
          "description": "NEAR Account Identifier.\n\nThis is a unique, syntactically valid, human-readable account identifier on the NEAR network.\n\n[See the crate-level docs for information about validation.](index.html#account-id-rules)\n\nAlso see [Error kind precedence](AccountId#error-kind-precedence).\n\n## Examples\n\n``` use near_account_id::AccountId;\n\nlet alice: AccountId = \"alice.near\".parse().unwrap();\n\nassert!(\"ƒelicia.near\".parse::<AccountId>().is_err()); // (ƒ is not f) ```",
          "type": "string"
        },
        "Gig": {
          "type": "object",
          "required": [
            "agency",
            "binding_amount",
            "kind",
            "status"
          ],
          "properties": {
            "ace": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AccountId"
                },
                {
                  "type": "null"
                }
              ]
            },
            "agency": {
              "$ref": "#/definitions/AccountId"
            },
            "binding_amount": {
              "type": "string"
            },
            "kind": {
              "$ref": "#/definitions/GigKind"
            },
            "status": {
              "$ref": "#/definitions/GigStatus"
            }
          }
        },
        "GigKind": {
          "type": "string",
          "enum": [
            "FullTime",
            "PartTime",
            "Contract"
          ]
        },
        "GigStatus": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Pending",
                "Active",
                "Completed",
                "Cancelled"
              ]
            },
            {
              "type": "object",
              "required": [
                "Rejected"
              ],
              "properties": {
                "Rejected": {
                  "type": "object",
                  "required": [
                    "reason"
                  ],
                  "properties": {
                    "reason": {
                      "$ref": "#/definitions/RejectionReason"
                    }
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "Promise": true,
        "RejectionReason": {
          "type": "string",
          "enum": [
            "Scam",
            "Sham",
            "Spam"
          ]
        }
      }
    }
  }
}