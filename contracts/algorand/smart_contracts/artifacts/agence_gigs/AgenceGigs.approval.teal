#pragma version 10

smart_contracts.agence_gigs.contract.AgenceGigs.approval_program:
    intcblock 0 1 2 64
    bytecblock "gigs" "next_gig_id" 0x004a 0x00 0x000750656e64696e67 0x151f7c75 "Gig " 0x0006416374697665 0x0000 "governance_account" 0x0002
    txn ApplicationID
    bnz main_after_if_else@2
    callsub __init__

main_after_if_else@2:
    callsub __puya_arc4_router__
    return


// smart_contracts.agence_gigs.contract.AgenceGigs.__init__() -> void:
__init__:
    proto 0 0
    bytec_1 // "next_gig_id"
    pushbytes 0x0000000000000000
    app_global_put
    bytec_0 // "gigs"
    bytec 8 // 0x0000
    app_global_put
    retsub


// smart_contracts.agence_gigs.contract.AgenceGigs.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___after_if_else@12
    pushbytess 0x1dba557f 0x5988213d 0x3e2a2207 0x01f59dc3 0xbd5719da 0x8ae49ad6 0x44071e56 // method "init(address,uint64)void", method "create_gig(address,uint64)void", method "start_gig(uint64,address)void", method "update_gig(uint64,string)void", method "get_gigs()(address,address,string,uint64)[]", method "get_gig_by_address(address)(address,address,string,uint64)[]", method "get_gig(uint64)(address,address,string,uint64)"
    txna ApplicationArgs 0
    match __puya_arc4_router___init_route@2 __puya_arc4_router___create_gig_route@3 __puya_arc4_router___start_gig_route@4 __puya_arc4_router___update_gig_route@5 __puya_arc4_router___get_gigs_route@6 __puya_arc4_router___get_gig_by_address_route@7 __puya_arc4_router___get_gig_route@8
    intc_0 // 0
    retsub

__puya_arc4_router___init_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    !
    assert // is creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    callsub init
    intc_1 // 1
    retsub

__puya_arc4_router___create_gig_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    callsub create_gig
    intc_1 // 1
    retsub

__puya_arc4_router___start_gig_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    callsub start_gig
    intc_1 // 1
    retsub

__puya_arc4_router___update_gig_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    callsub update_gig
    intc_1 // 1
    retsub

__puya_arc4_router___get_gigs_route@6:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub get_gigs
    bytec 5 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    retsub

__puya_arc4_router___get_gig_by_address_route@7:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    callsub get_gig_by_address
    bytec 5 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    retsub

__puya_arc4_router___get_gig_route@8:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    callsub get_gig
    bytec 5 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    retsub

__puya_arc4_router___after_if_else@12:
    intc_0 // 0
    retsub


// smart_contracts.agence_gigs.contract.AgenceGigs.init(governance_account: bytes, governance_app_id: bytes) -> void:
init:
    proto 2 0
    bytec 9 // "governance_account"
    frame_dig -2
    app_global_put
    frame_dig -1
    btoi
    pushbytes "governance_app_id"
    swap
    app_global_put
    retsub


// smart_contracts.agence_gigs.contract.AgenceGigs.create_gig(agency: bytes, binding_amount: bytes) -> void:
create_gig:
    proto 2 0
    callsub only_governance
    bytec_3 // 0x00
    !=
    assert // Only the governance contract can call this method
    intc_0 // 0
    bytec_0 // "gigs"
    app_global_get_ex
    assert // check self.gigs exists
    frame_dig -2
    dup
    concat
    bytec_2 // 0x004a
    concat
    frame_dig -1
    concat
    bytec 4 // 0x000750656e64696e67
    concat
    bytec 10 // 0x0002
    swap
    concat
    dig 1
    intc_0 // 0
    extract_uint16
    uncover 2
    extract 2 0
    intc_1 // 1
    uncover 3
    callsub dynamic_array_concat_dynamic_element
    bytec_0 // "gigs"
    swap
    app_global_put
    intc_0 // 0
    bytec_1 // "next_gig_id"
    app_global_get_ex
    assert // check self.next_gig_id exists
    btoi
    intc_1 // 1
    +
    itob
    bytec_1 // "next_gig_id"
    swap
    app_global_put
    intc_0 // 0
    bytec_1 // "next_gig_id"
    app_global_get_ex
    assert // check self.next_gig_id exists
    bytec 6 // "Gig "
    swap
    concat
    pushbytes " created"
    concat
    log
    retsub


// smart_contracts.agence_gigs.contract.AgenceGigs.only_governance() -> bytes:
only_governance:
    proto 0 1
    intc_0 // 0
    bytec 9 // "governance_account"
    app_global_get_ex
    assert // check self.governance_account exists
    txn Sender
    ==
    bytec_3 // 0x00
    intc_0 // 0
    uncover 2
    setbit
    retsub


// smart_contracts.agence_gigs.contract.AgenceGigs.start_gig(gig_id: bytes, selected_ace: bytes) -> void:
start_gig:
    proto 2 0
    callsub only_governance
    bytec_3 // 0x00
    !=
    assert // Only the governance contract can call this method
    intc_0 // 0
    bytec_1 // "next_gig_id"
    app_global_get_ex
    assert // check self.next_gig_id exists
    btoi
    frame_dig -2
    btoi
    swap
    dig 1
    >
    assert // Invalid gig ID
    intc_0 // 0
    bytec_0 // "gigs"
    app_global_get_ex
    assert // check self.gigs exists
    dup
    extract 2 0
    dig 2
    intc_2 // 2
    *
    dup2
    extract_uint16
    uncover 3
    intc_0 // 0
    extract_uint16
    dig 4
    intc_1 // 1
    +
    swap
    dig 1
    - // on error: Index access is out of bounds
    dig 4
    len
    dig 2
    intc_2 // 2
    *
    dig 6
    dig 1
    extract_uint16
    uncover 2
    swap
    uncover 3
    select
    uncover 5
    uncover 4
    uncover 2
    substring3
    dup
    intc_3 // 64
    extract_uint16
    dig 1
    len
    substring3
    bytec 4 // 0x000750656e64696e67
    ==
    assert // Gig is not pending
    intc_0 // 0
    bytec_0 // "gigs"
    app_global_get_ex
    assert // check self.gigs exists
    dup
    extract 2 0
    dup
    uncover 5
    extract_uint16
    uncover 2
    intc_0 // 0
    extract_uint16
    uncover 4
    - // on error: Index access is out of bounds
    dig 2
    len
    dig 3
    uncover 5
    extract_uint16
    uncover 2
    select
    substring3
    dup
    extract 32 32 // on error: Index access is out of bounds
    swap
    extract 66 8 // on error: Index access is out of bounds
    frame_dig -1
    uncover 2
    concat
    bytec_2 // 0x004a
    concat
    swap
    concat
    bytec 7 // 0x0006416374697665
    concat
    intc_0 // 0
    bytec_0 // "gigs"
    app_global_get_ex
    assert // check self.gigs exists
    swap
    uncover 2
    callsub dynamic_array_replace_dynamic_element
    bytec_0 // "gigs"
    swap
    app_global_put
    bytec 6 // "Gig "
    frame_dig -2
    concat
    pushbytes " started"
    concat
    log
    retsub


// smart_contracts.agence_gigs.contract.AgenceGigs.update_gig(gig_id: bytes, status: bytes) -> void:
update_gig:
    proto 2 0
    callsub only_governance
    bytec_3 // 0x00
    !=
    assert // Only the governance contract can call this method
    intc_0 // 0
    bytec_1 // "next_gig_id"
    app_global_get_ex
    assert // check self.next_gig_id exists
    btoi
    frame_dig -2
    btoi
    dup
    uncover 2
    dig 1
    >
    assert // Invalid gig ID
    intc_0 // 0
    bytec_0 // "gigs"
    app_global_get_ex
    assert // check self.gigs exists
    dup
    extract 2 0
    dig 2
    intc_2 // 2
    *
    dup
    cover 4
    dig 1
    swap
    extract_uint16
    uncover 2
    intc_0 // 0
    extract_uint16
    uncover 3
    intc_1 // 1
    +
    dup
    cover 4
    swap
    dig 1
    - // on error: Index access is out of bounds
    dig 3
    len
    uncover 2
    intc_2 // 2
    *
    dup
    cover 5
    dig 4
    swap
    extract_uint16
    uncover 2
    select
    substring3
    frame_dig -1
    extract 2 0
    pushbytess "Active" "Canceled" "Completed" // "Active", "Canceled", "Completed"
    uncover 3
    match update_gig_switch_case_0@1 update_gig_switch_case_1@2 update_gig_switch_case_2@3
    err // Invalid status

update_gig_switch_case_0@1:
    intc_0 // 0
    bytec_0 // "gigs"
    app_global_get_ex
    assert // check self.gigs exists
    dup
    extract 2 0
    dup
    frame_dig 1
    extract_uint16
    uncover 2
    intc_0 // 0
    extract_uint16
    frame_dig 2
    - // on error: Index access is out of bounds
    dig 2
    len
    dig 3
    frame_dig 3
    extract_uint16
    uncover 2
    select
    substring3
    dup
    intc_3 // 64
    extract_uint16
    dig 1
    len
    substring3
    bytec 4 // 0x000750656e64696e67
    ==
    assert // Gig is not active
    frame_dig 4
    dup
    extract 0 32 // on error: Index access is out of bounds
    dig 1
    extract 32 32 // on error: Index access is out of bounds
    uncover 2
    extract 66 8 // on error: Index access is out of bounds
    cover 2
    concat
    bytec_2 // 0x004a
    concat
    swap
    concat
    bytec 7 // 0x0006416374697665
    concat
    intc_0 // 0
    bytec_0 // "gigs"
    app_global_get_ex
    assert // check self.gigs exists
    swap
    frame_dig 0
    callsub dynamic_array_replace_dynamic_element
    bytec_0 // "gigs"
    swap
    app_global_put
    b update_gig_switch_case_next@5

update_gig_switch_case_1@2:
    intc_0 // 0
    bytec_0 // "gigs"
    app_global_get_ex
    assert // check self.gigs exists
    dup
    extract 2 0
    dup
    frame_dig 1
    extract_uint16
    uncover 2
    intc_0 // 0
    extract_uint16
    frame_dig 2
    - // on error: Index access is out of bounds
    dig 2
    len
    dig 3
    frame_dig 3
    extract_uint16
    uncover 2
    select
    substring3
    dup
    intc_3 // 64
    extract_uint16
    dig 1
    len
    substring3
    bytec 4 // 0x000750656e64696e67
    ==
    assert // Gig is not active
    frame_dig 4
    dup
    extract 0 32 // on error: Index access is out of bounds
    dig 1
    extract 32 32 // on error: Index access is out of bounds
    uncover 2
    extract 66 8 // on error: Index access is out of bounds
    cover 2
    concat
    bytec_2 // 0x004a
    concat
    swap
    concat
    pushbytes 0x000843616e63656c6564
    concat
    intc_0 // 0
    bytec_0 // "gigs"
    app_global_get_ex
    assert // check self.gigs exists
    swap
    frame_dig 0
    callsub dynamic_array_replace_dynamic_element
    bytec_0 // "gigs"
    swap
    app_global_put
    b update_gig_switch_case_next@5

update_gig_switch_case_2@3:
    intc_0 // 0
    bytec_0 // "gigs"
    app_global_get_ex
    assert // check self.gigs exists
    dup
    extract 2 0
    dup
    frame_dig 1
    extract_uint16
    uncover 2
    intc_0 // 0
    extract_uint16
    frame_dig 2
    - // on error: Index access is out of bounds
    dig 2
    len
    dig 3
    frame_dig 3
    extract_uint16
    uncover 2
    select
    substring3
    dup
    intc_3 // 64
    extract_uint16
    dig 1
    len
    substring3
    bytec 7 // 0x0006416374697665
    ==
    assert // Gig is not active
    frame_dig 4
    dup
    extract 0 32 // on error: Index access is out of bounds
    dig 1
    extract 32 32 // on error: Index access is out of bounds
    uncover 2
    extract 66 8 // on error: Index access is out of bounds
    cover 2
    concat
    bytec_2 // 0x004a
    concat
    swap
    concat
    pushbytes 0x0009436f6d706c65746564
    concat
    intc_0 // 0
    bytec_0 // "gigs"
    app_global_get_ex
    assert // check self.gigs exists
    swap
    frame_dig 0
    callsub dynamic_array_replace_dynamic_element
    bytec_0 // "gigs"
    swap
    app_global_put

update_gig_switch_case_next@5:
    bytec 6 // "Gig "
    frame_dig -2
    concat
    pushbytes " updated to "
    concat
    frame_dig -1
    concat
    log
    retsub


// smart_contracts.agence_gigs.contract.AgenceGigs.get_gigs() -> bytes:
get_gigs:
    proto 0 1
    intc_0 // 0
    bytec_0 // "gigs"
    app_global_get_ex
    assert // check self.gigs exists
    retsub


// smart_contracts.agence_gigs.contract.AgenceGigs.get_gig_by_address(user_address: bytes) -> bytes:
get_gig_by_address:
    proto 1 1
    intc_0 // 0
    pushbytes ""
    dup
    bytec 8 // 0x0000
    intc_0 // 0
    bytec_1 // "next_gig_id"
    app_global_get_ex
    assert // check self.next_gig_id exists
    btoi
    intc_0 // 0

get_gig_by_address_for_header@1:
    frame_dig 5
    frame_dig 4
    <
    bz get_gig_by_address_after_for@7
    intc_0 // 0
    bytec_0 // "gigs"
    app_global_get_ex
    assert // check self.gigs exists
    dup
    extract 2 0
    frame_dig 5
    dup
    cover 3
    intc_2 // 2
    *
    dup
    frame_bury 1
    dig 1
    swap
    extract_uint16
    uncover 2
    intc_0 // 0
    extract_uint16
    uncover 3
    intc_1 // 1
    +
    dup
    frame_bury 5
    swap
    dig 1
    - // on error: Index access is out of bounds
    dig 3
    len
    uncover 2
    intc_2 // 2
    *
    dup
    frame_bury 2
    dig 4
    swap
    extract_uint16
    uncover 2
    select
    substring3
    extract 0 32 // on error: Index access is out of bounds
    frame_dig -1
    ==
    bnz get_gig_by_address_if_body@4
    intc_0 // 0
    bytec_0 // "gigs"
    app_global_get_ex
    assert // check self.gigs exists
    dup
    extract 2 0
    dup
    frame_dig 1
    extract_uint16
    uncover 2
    intc_0 // 0
    extract_uint16
    frame_dig 5
    - // on error: Index access is out of bounds
    dig 2
    len
    dig 3
    frame_dig 2
    extract_uint16
    uncover 2
    select
    substring3
    extract 32 32 // on error: Index access is out of bounds
    frame_dig -1
    ==
    frame_dig 3
    frame_bury 0
    bz get_gig_by_address_after_if_else@5

get_gig_by_address_if_body@4:
    intc_0 // 0
    bytec_0 // "gigs"
    app_global_get_ex
    assert // check self.gigs exists
    dup
    extract 2 0
    dup
    frame_dig 1
    extract_uint16
    uncover 2
    intc_0 // 0
    extract_uint16
    frame_dig 5
    - // on error: Index access is out of bounds
    dig 2
    len
    dig 3
    frame_dig 2
    extract_uint16
    uncover 2
    select
    substring3
    bytec 10 // 0x0002
    swap
    concat
    frame_dig 3
    dup
    intc_0 // 0
    extract_uint16
    swap
    extract 2 0
    intc_1 // 1
    uncover 3
    callsub dynamic_array_concat_dynamic_element
    frame_bury 0

get_gig_by_address_after_if_else@5:
    frame_dig 0
    frame_bury 3
    b get_gig_by_address_for_header@1

get_gig_by_address_after_for@7:
    frame_dig 3
    frame_bury 0
    retsub


// smart_contracts.agence_gigs.contract.AgenceGigs.get_gig(gig_id: bytes) -> bytes:
get_gig:
    proto 1 1
    intc_0 // 0
    bytec_1 // "next_gig_id"
    app_global_get_ex
    assert // check self.next_gig_id exists
    btoi
    frame_dig -1
    btoi
    swap
    dig 1
    >
    assert // Invalid gig ID
    intc_0 // 0
    bytec_0 // "gigs"
    app_global_get_ex
    assert // check self.gigs exists
    dup
    extract 2 0
    dig 2
    intc_2 // 2
    *
    dig 1
    swap
    extract_uint16
    uncover 2
    intc_0 // 0
    extract_uint16
    uncover 3
    intc_1 // 1
    +
    swap
    dig 1
    - // on error: Index access is out of bounds
    dig 3
    len
    uncover 2
    intc_2 // 2
    *
    dig 4
    swap
    extract_uint16
    uncover 2
    select
    substring3
    retsub


// _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
dynamic_array_concat_dynamic_element:
    proto 4 1
    pushbytes ""
    dup
    frame_dig -2
    intc_2 // 2
    *
    frame_dig -4
    intc_2 // 2
    *
    intc_0 // 0

dynamic_array_concat_dynamic_element_for_header@1:
    frame_dig 4
    frame_dig 3
    <
    bz dynamic_array_concat_dynamic_element_after_for@4
    frame_dig -3
    frame_dig 4
    dup
    cover 2
    extract_uint16
    frame_dig 2
    +
    itob
    extract 6 2
    frame_dig 1
    swap
    concat
    frame_bury 1
    intc_2 // 2
    +
    frame_bury 4
    b dynamic_array_concat_dynamic_element_for_header@1

dynamic_array_concat_dynamic_element_after_for@4:
    frame_dig -3
    len
    frame_bury 0
    intc_0 // 0
    frame_bury 4

dynamic_array_concat_dynamic_element_for_header@5:
    frame_dig 4
    frame_dig 2
    <
    bz dynamic_array_concat_dynamic_element_after_for@8
    frame_dig -1
    frame_dig 4
    dup
    cover 2
    extract_uint16
    frame_dig 0
    +
    itob
    extract 6 2
    frame_dig 1
    swap
    concat
    frame_bury 1
    intc_2 // 2
    +
    frame_bury 4
    b dynamic_array_concat_dynamic_element_for_header@5

dynamic_array_concat_dynamic_element_after_for@8:
    frame_dig -4
    frame_dig -2
    +
    itob
    extract 6 2
    frame_dig 1
    concat
    frame_dig -3
    frame_dig 3
    frame_dig 0
    substring3
    concat
    frame_dig -1
    len
    frame_dig -1
    frame_dig 2
    uncover 2
    substring3
    concat
    frame_bury 0
    retsub


// _puya_lib.arc4.dynamic_array_replace_dynamic_element(source: bytes, new_item: bytes, index: uint64) -> bytes:
dynamic_array_replace_dynamic_element:
    proto 3 1
    frame_dig -3
    substring 0 2
    dup
    btoi
    frame_dig -3
    extract 2 0
    frame_dig -2
    frame_dig -1
    uncover 3
    callsub static_array_replace_dynamic_element
    concat
    retsub


// _puya_lib.arc4.static_array_replace_dynamic_element(array_head_and_tail: bytes, new_item: bytes, index: uint64, array_length: uint64) -> bytes:
static_array_replace_dynamic_element:
    proto 4 1
    frame_dig -2
    intc_2 // 2
    *
    frame_dig -4
    swap
    extract_uint16
    frame_dig -2
    intc_1 // 1
    +
    intc_2 // 2
    *
    dup
    cover 2
    frame_dig -4
    swap
    extract_uint16
    frame_dig -4
    len
    frame_dig -1
    frame_dig -2
    -
    intc_1 // 1
    -
    dig 1
    uncover 3
    uncover 2
    select
    dup
    dig 3
    -
    cover 3
    frame_dig -3
    len
    cover 3
    frame_dig -4
    intc_0 // 0
    uncover 4
    substring3
    frame_dig -3
    concat
    frame_dig -4
    uncover 2
    uncover 3
    substring3
    concat
    frame_dig -1
    intc_2 // 2
    *

static_array_replace_dynamic_element_for_header@1:
    frame_dig 0
    frame_dig 4
    <
    bz static_array_replace_dynamic_element_after_for@4
    frame_dig 3
    dup
    frame_dig 0
    dup
    cover 3
    extract_uint16
    frame_dig 2
    +
    frame_dig 1
    -
    itob
    extract 6 2
    dig 2
    swap
    replace3
    frame_bury 3
    intc_2 // 2
    +
    frame_bury 0
    b static_array_replace_dynamic_element_for_header@1

static_array_replace_dynamic_element_after_for@4:
    frame_dig 3
    frame_bury 0
    retsub
